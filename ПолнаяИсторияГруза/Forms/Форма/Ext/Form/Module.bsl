#Область ВнутренняяЛогика

&НаСервере 
Процедура ЗаполнитьДеревоПоОбъекту(Объект)
	ДеревоИстории = ДанныеФормыВЗначение(дзПолнаяИсторияГруза, Тип("ДеревоЗначений"));
	ДеревоИстории.Строки.Очистить();
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		
		ЗаполнитьДеревоПоСерии(Объект,ДеревоИстории);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ВМТП_КоносаментВходящий") Тогда
		
		ЗаполнитьДеревоПоКоносаменту(ДеревоИстории, Объект,0);

		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ВМТП_ФормированиеРасформирование") Тогда
		
		ЗаполнитьПоРасформированию(ДеревоИстории, Объект,0);

		
	КонецЕсли;
	ЗначениеВДанныеФормы(ДеревоИстории, дзПолнаяИсторияГруза);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоРасформированию(Знач ДеревоИстории, Знач Объект, СчетчикРекурсии)
	
	Перем СтрокаГруз, Узел;
	
	Узел = ДеревоИстории.Строки.Добавить(); 	
	Узел.Объект = Объект; 
	Узел.ПометкаУдаления = Объект.ПометкаУдаления;
	Для Каждого СтрокаГруз Из Объект.ГрузыПриемники Цикл
		ЗаполнитьДеревоИсторииПоГрузу(СтрокаГруз.Серия, Узел, СтрокаГруз.ОписаниеГруза, СчетчикРекурсии); 
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПоКоносаменту(Знач ДеревоИстории, Знач Объект, СчетчикРекурсии)
	
	Перем СтрокаГруз, Узел;
	
	Узел = ДеревоИстории.Строки.Добавить(); 	
	Узел.Объект = Объект; 
	Узел.ПометкаУдаления = Объект.ПометкаУдаления;
	Для Каждого СтрокаГруз Из Объект.Грузы Цикл
		ЗаполнитьДеревоИсторииПоГрузу(СтрокаГруз.Груз, Узел, СтрокаГруз.ОписаниеГруза, СчетчикРекурсии); 
	КонецЦикла;

КонецПроцедуры


&НаСервере 
Процедура ЗаполнитьДеревоПоСерии(Груз,ДеревоИстории)
	
	ОписаниеГруза = ПолучитьОписаниеГруза(Груз);
	
	СчетчикРекурсии = 0;
	
	ЗаполнитьДеревоИсторииПоГрузу(Груз, ДеревоИстории, ОписаниеГруза, СчетчикРекурсии);
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДеревоИсторииПоГрузу(Груз, РодительскийУзел, ПервичноеОписание, СчетчикРекурсии)
	
	СчетчикРекурсии = СчетчикРекурсии + 1;
	
	Если СчетчикРекурсии > 1000 Тогда
		Возврат;
	КонецЕсли;
	
	Узел = РодительскийУзел.Строки.Добавить(); 	
	Узел.Объект = Груз;
		Статус           = ВМТП_ГрузообработкаСервер.ПолучитьСтатусГруза(Груз);
	ИДВнешнейСистемы = ВМТП_ГрузообработкаСервер.ПолучитьИдентификаторГруза(Груз);

	Узел.КодГруза = Груз.Код+" / "+ИДВнешнейСистемы+" / "+Статус;
	
	ПараметрыГруза = ПолучитьПараметрыГруза(Груз, ПервичноеОписание);
	
	ЗаполнитьЗначенияСвойств(Узел, ПараметрыГруза);
	
	ДокументыГруза = НайтиВсеДокументыГруза(Груз);
	
	Для Каждого Документ Из ДокументыГруза Цикл
		ДокументУзел = Узел.Строки.Добавить();		
		ДокументУзел.Объект = Документ;
		ДокументУзел.ПометкаУдаления = Документ.ПометкаУдаления;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_ФормированиеРасформирование") Тогда
			ЗаполнитьДеревоПоРасформированию(ПервичноеОписание, Документ, СчетчикРекурсии, ДокументУзел);
		КонецЕсли;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_СтрокаТальманскойРасписки") Тогда
			
		
		
		КонецЕсли;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_ДО1") Тогда
		
			
		
		КонецЕсли;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_ДО2") Тогда
		
			
		
		КонецЕсли;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_КоммерческийАкт") Тогда
		
			
		
		КонецЕсли;
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВМТП_УстановкаОписанияГруза") Тогда
		
			  ДокументУзел.Вес = Документ.Вес;
			  ДокументУзел.КоличествоМест = Документ.КоличествоМест;
		
		КонецЕсли;
		
		//ГрузыРасформирования = ПолучитьГрузыОписанияГрузов(Расформирование, ПервичноеОписание);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПоРасформированию(Знач ПервичноеОписание, Знач Расформирование, СчетчикРекурсии, Знач Узел)
	
	
	Для Каждого СтрокаГруз Из Расформирование.ГрузыПриемники Цикл
		
		Если ПервичноеОписание <> СтрокаГруз.ОписаниеГруза Тогда
			Продолжить;				
		КонецЕсли;
		
		ЗаполнитьДеревоИсторииПоГрузу(СтрокаГруз.Серия, Узел, ПервичноеОписание, СчетчикРекурсии); 			
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция НайтиВсеДокументыГруза(Груз)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВМТП_ФормированиеРасформированиеГрузыИсточники.Ссылка КАК Ссылка,
	|	ВМТП_ФормированиеРасформированиеГрузыИсточники.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВМТП_ФормированиеРасформирование.ГрузыИсточники КАК ВМТП_ФормированиеРасформированиеГрузыИсточники
	|ГДЕ
	|	ВМТП_ФормированиеРасформированиеГрузыИсточники.Серия = &Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ  РАЗЛИЧНЫЕ
	|	ВМТП_УстановкаОписанияГруза.Ссылка,
	|	ВМТП_УстановкаОписанияГруза.Дата
	|ИЗ
	|	Документ.ВМТП_УстановкаОписанияГруза КАК ВМТП_УстановкаОписанияГруза
	|ГДЕ
	|	ВМТП_УстановкаОписанияГруза.Серия = &Серия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВМТП_УстановкаОписанияГруза.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВМТП_СтрокаТальманскойРасписки.Ссылка,
	|	ВМТП_СтрокаТальманскойРасписки.Дата
	|ИЗ
	|	Документ.ВМТП_СтрокаТальманскойРасписки КАК ВМТП_СтрокаТальманскойРасписки
	|ГДЕ
	|	ВМТП_СтрокаТальманскойРасписки.Серия = &Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВМТП_КоммерческийАктГрузы.Ссылка,
	|	ВМТП_КоммерческийАктГрузы.Ссылка.Дата
	|ИЗ
	|	Документ.ВМТП_КоммерческийАкт.Грузы КАК ВМТП_КоммерческийАктГрузы
	|ГДЕ
	|	ВМТП_КоммерческийАктГрузы.Груз = &Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВМТП_ДО1Грузы.Ссылка,
	|	ВМТП_ДО1Грузы.Ссылка.Дата
	|ИЗ
	|	Документ.ВМТП_ДО1.Грузы КАК ВМТП_ДО1Грузы
	|ГДЕ
	|	ВМТП_ДО1Грузы.Груз = &Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВМТП_ДО2Грузы.Ссылка,
	|	ВМТП_ДО2Грузы.Ссылка.Дата
	|ИЗ
	|	Документ.ВМТП_ДО2.Грузы КАК ВМТП_ДО2Грузы
	|ГДЕ
	|	ВМТП_ДО2Грузы.Груз = &Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Запрос.УстановитьПараметр("Серия", Груз);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");	
	
КонецФункции


&НаСервере
Функция ПолучитьОписаниеГруза(Груз)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВМТП_ИсторияОписанияГрузовСрезПоследних.ОписаниеГрузов КАК ОписаниеГруза
	|ИЗ
	|	РегистрСведений.ВМТП_ИсторияОписанияГрузов.СрезПоследних(, Груз = &Груз) КАК ВМТП_ИсторияОписанияГрузовСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ВМТП_ИсторияОписанияГрузовСрезПоследних.ОписаниеГрузов";
	Запрос.УстановитьПараметр("Груз", Груз);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ОписаниеГруза;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


&НаСервере
Функция ПолучитьПараметрыГруза(Груз, ОписаниеГруза)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВМТП_ИсторияОписанияГрузовСрезПоследних.ПараметрОписания КАК ПараметрОписания,
	|	ВМТП_ИсторияОписанияГрузовСрезПоследних.ЗначениеПараметра КАК ЗначениеПараметра
	|ИЗ
	|	РегистрСведений.ВМТП_ИсторияОписанияГрузов.СрезПоследних(
	|			,
	|			Груз = &Груз
	|				И ОписаниеГрузов = &ОписаниеГрузов
	|				И (ПараметрОписания = ЗНАЧЕНИЕ(Перечисление.ВМТП_ПараметрыОписанияГрузов.КоличествоМест)
	|					ИЛИ ПараметрОписания = ЗНАЧЕНИЕ(Перечисление.ВМТП_ПараметрыОписанияГрузов.Вес))) КАК ВМТП_ИсторияОписанияГрузовСрезПоследних";
	Запрос.УстановитьПараметр("Груз", Груз);
	Запрос.УстановитьПараметр("ОписаниеГрузов", ОписаниеГруза);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПараметрыГруза = Новый Структура;
	
	Пока Выборка.Следующий() Цикл
		
		Параметр = "";
		Если Выборка.ПараметрОписания = Перечисления.ВМТП_ПараметрыОписанияГрузов.КоличествоМест Тогда
			Параметр = "КоличествоМест";
		Иначе
			Параметр = "Вес";
		КонецЕсли;
		
		ПараметрыГруза.Вставить(Параметр, Выборка.ЗначениеПараметра);
		
	КонецЦикла;
	
	Возврат ПараметрыГруза;	 
	
КонецФункции


#КонецОбласти


#Область ОбработчикиСобытийФормы


&НаКлиенте
Процедура Сформировать(Команда)
	ЗаполнитьДеревоПоОбъекту(ОбъектПостроенияИстории);
КонецПроцедуры


#КонецОбласти